{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "add_emp",
    "fullyQualifiedName": "employee_service.add_emp",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Employees",
    "collectionId": "Employees_employee_service",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  add_employee.run(() => {\n    fetch_all_emp.run(() => {\n      get_emp_by_id.run(() => {\n        add_emp_filepicker.files.length > 0 ? update_photo.run(() => {\n          update_emp_photo.run(() => {\n            get_emp_by_id.run(() => {\n              fetch_all_emp.run();\n              resetWidget('add_emp_form', true);\n              resetWidget('add_emp_filepicker', true);\n              showAlert('Employee added successfully.', 'success');\n              storeValue('empTab', 2);\n            }, () => {}, {\n              empId: get_emp_by_id.data[0].id\n            });\n          }, () => {}, {\n            photo: update_photo.data.signedUrl.split('?')[0],\n            id: get_emp_by_id.data[0].id\n          });\n        }, () => {}, {\n          file: add_emp_filepicker.files[0]\n        }) : get_emp_by_id.run(() => {\n          resetWidget('add_emp_form', true);\n          resetWidget('add_emp_filepicker', true);\n          showAlert('Employee added successfully.', 'success');\n          storeValue('empTab', 2);\n        }, () => {}, {\n          empId: get_emp_by_id.data[0].id\n        });\n      }, () => {}, {\n        empId: _.orderBy(fetch_all_emp.data, 'id', 'desc')[0].id\n      });\n    });\n  }, () => showAlert('please enter the employee details correctly', 'error'));\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  add_employee.run(() => {\n    fetch_all_emp.run(() => {\n      get_emp_by_id.run(() => {\n        add_emp_filepicker.files.length > 0 ? update_photo.run(() => {\n          update_emp_photo.run(() => {\n            get_emp_by_id.run(() => {\n              fetch_all_emp.run();\n              resetWidget('add_emp_form', true);\n              resetWidget('add_emp_filepicker', true);\n              showAlert('Employee added successfully.', 'success');\n              storeValue('empTab', 2);\n            }, () => {}, {\n              empId: get_emp_by_id.data[0].id\n            });\n          }, () => {}, {\n            photo: update_photo.data.signedUrl.split('?')[0],\n            id: get_emp_by_id.data[0].id\n          });\n        }, () => {}, {\n          file: add_emp_filepicker.files[0]\n        }) : get_emp_by_id.run(() => {\n          resetWidget('add_emp_form', true);\n          resetWidget('add_emp_filepicker', true);\n          showAlert('Employee added successfully.', 'success');\n          storeValue('empTab', 2);\n        }, () => {}, {\n          empId: get_emp_by_id.data[0].id\n        });\n      }, () => {}, {\n        empId: _.orderBy(fetch_all_emp.data, 'id', 'desc')[0].id\n      });\n    });\n  }, () => showAlert('please enter the employee details correctly', 'error'));\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Employees_employee_service.add_emp",
  "deleted": false,
  "gitSyncId": "63a060bf729dcb1170cd0092_63a065d5729dcb1170cd021a"
}