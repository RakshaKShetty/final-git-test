{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "update_manager",
    "fullyQualifiedName": "employee_service.update_manager",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Employees",
    "collectionId": "Employees_employee_service",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  try {\n    const manager_email = update_manager_manager.selectedOptionValue;\n    update_manager_employees.selectedOptionValues.forEach(empId => update_emp_manager.run({\n      manager: manager_email,\n      id: empId\n    }));\n    fetch_all_emp.run(() => {\n      resetWidget('empTable', true);\n      showAlert('Manager updated for the selected employees', 'success');\n    });\n  } catch {\n    showAlert('Manager update seems to be broken right now, please try again after sometime', 'error');\n  } finally {\n    resetWidget('update_manager_modal', true);\n    closeModal('update_manager_modal');\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  try {\n    const manager_email = update_manager_manager.selectedOptionValue;\n    update_manager_employees.selectedOptionValues.forEach(empId => update_emp_manager.run({\n      manager: manager_email,\n      id: empId\n    }));\n    fetch_all_emp.run(() => {\n      resetWidget('empTable', true);\n      showAlert('Manager updated for the selected employees', 'success');\n    });\n  } catch {\n    showAlert('Manager update seems to be broken right now, please try again after sometime', 'error');\n  } finally {\n    resetWidget('update_manager_modal', true);\n    closeModal('update_manager_modal');\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Employees_employee_service.update_manager",
  "deleted": false,
  "gitSyncId": "63a060bf729dcb1170cd0092_63a065d5729dcb1170cd0214"
}